---
# Window or door open for too long reminder automation
#
# This automation reminds me if I left some window or door open
# for too long.
#
id: "8511c2ca-4ea3-429f-b3a3-e35bd6289e67"
mode: single
alias: "Window or door open for too long reminder"
description: |-
  This automation reminds me to close an open window or door.

  Sometimes I open a window or door to let some fresh air in
  and forget to close it again. This automations aims to prevent
  this.

trigger:
  - &closed_condition
    platform: state
    entity_id: binary_sensor.everything_closed
    to: "off"
    for: "00:{{ '%0.2d' | format(states('input_number.max_open_window_or_door_time')|int) }}:00"

condition: "{{ is_state('binary_sensor.outside_warmer_than_inside', 'off') }}"

action:
  - variables:
      action_cooldown15: "{{ 'CLOSE_COOLDOWN15_' ~ context.id }}"
      action_cooldown60: "{{ 'CLOSE_COOLDOWN60_' ~ context.id }}"
      action_cooldown300: "{{ 'CLOSE_COOLDOWN300_' ~ context.id }}"
  - alias: "Keep sending notifications until its closed again"
    repeat:
      until:
        - <<: *closed_condition
          to: "on"
          for:
      sequence:
        - service: notify.mobile_app_pixel4a
          data:
            title: "It's cold outside...maybe close all windows?"
            message: |-
              The following entities are still open, you might want to close them:
                {{ states('sensor.open_windows') }}
                {{ states('sensor.open_doors') }}
            data:
              color: "yellow"
              notification_icon: "mdi:window-open"
              actions:
                - action: "{{ action_cooldown15 }}"
                  title: "15 mins"
                - action: "{{ action_cooldown60 }}"
                  title: "1 h"
                - action: "{{ action_cooldown300 }}"
                  title: "3 h"
        - wait_for_trigger:
            - platform: event
              event_type: mobile_app_notification_action
              event_data:
                action: "{{ action_cooldown15 }}"
              id: 'Option One'
            - platform: event
              event_type: mobile_app_notification_action
              event_data:
                action: "{{ action_cooldown60 }}"
              id: 'Option Two'
            - platform: event
              event_type: mobile_app_notification_action
              event_data:
                action: "{{ action_cooldown300 }}"
              id: 'Option Three'
          timeout: "01:00:00"
          continue_on_timeout: false
        - choose:
            - conditions: "{{ wait.trigger.id == 'Option One' }}"
              sequence:
                - delay: "00:15"
            - conditions: "{{ wait.trigger.id == 'Option Two' }}"
              sequence:
                - delay: "01:00"
            - conditions: "{{ wait.trigger.id == 'Option Three' }}"
              sequence:
                - delay: "03:00"
